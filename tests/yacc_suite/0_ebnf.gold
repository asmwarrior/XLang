(grammar (definitions (definition_eq name-prefix "_XLANG_") (definitionm union (union_definition "\n    xl::node::TermInternalType<xl::node::NodeIdentIFace::INT>::type    int_value;    // int value\n    xl::node::TermInternalType<xl::node::NodeIdentIFace::FLOAT>::type  float_value;  // float value\n    xl::node::TermInternalType<xl::node::NodeIdentIFace::IDENT>::type  ident_value;  // symbol table index\n    xl::node::TermInternalType<xl::node::NodeIdentIFace::SYMBOL>::type symbol_value; // node pointer\n")) (definitionm error-verbose) (definitionm nonassoc ID_BASE) (definition_brace token int_value ID_INT) (definition_brace token float_value ID_FLOAT) (definition_brace token ident_value ID_IDENT) (definition_brace type symbol_value (symbols program statement expression)) (definitionm left (symbols '+' '-')) (definitionm left (symbols '*' '/')) (definitionm nonassoc ID_UMINUS) (definitionm nonassoc ID_COUNT)) (rules (rule root (rule_rhs (alt program (action " tree_context()->root() = $1; YYACCEPT; ")) (alt error (action " yyclearin; /* yyerrok; YYABORT; */ ")))) (rule program (rule_rhs (alt statement (action " $$ = $1; ")) (alt (terms program ',' statement) (action " $$ = MAKE_SYMBOL(\',\', 2, $1, $3); ")))) (rule statement (rule_rhs (alt expression (action " $$ = $1; ")) (alt (terms ID_IDENT '=' expression) (action " $$ = MAKE_SYMBOL(\'=\', 2, MAKE_TERM(ID_IDENT, $1), $3); ")))) (rule expression (rule_rhs (alt ID_INT (action " $$ = MAKE_TERM(ID_INT, $1); ")) (alt ID_FLOAT (action " $$ = MAKE_TERM(ID_FLOAT, $1); ")) (alt ID_IDENT (action " $$ = MAKE_TERM(ID_IDENT, $1); ")) (alt (terms '-' expression %prec ID_UMINUS) (action " $$ = MAKE_SYMBOL(ID_UMINUS, 1, $2); ")) (alt (terms expression '+' expression) (action " $$ = MAKE_SYMBOL(\'+\', 2, $1, $3); ")) (alt (terms expression '-' expression) (action " $$ = MAKE_SYMBOL(\'-\', 2, $1, $3); ")) (alt (terms expression '*' expression) (action " $$ = MAKE_SYMBOL(\'*\', 2, $1, $3); ")) (alt (terms expression '/' expression) (action " $$ = MAKE_SYMBOL(\'/\', 2, $1, $3); ")) (alt (terms '(' expression ')') (action " $$ = $2; "))))))
